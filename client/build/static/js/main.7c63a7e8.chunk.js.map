{"version":3,"sources":["utils/helpers.js","utils/actions.js","components/ProductItem/index.js","utils/queries.js","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/OrderHistory.js","pages/Success.js","utils/reducers.js","redux/store.js","App.js","serviceWorker.js","index.js","assets/spinner.gif"],"names":["idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","ProductItem","item","state","useSelector","dispatch","useDispatch","cart","image","name","price","quantity","className","to","alt","src","count","pluralize","onClick","itemInCart","find","cartItem","type","purchaseQuantity","parseInt","product","QUERY_PRODUCTS","gql","QUERY_CATEGORIES","QUERY_USER","QUERY_CHECKOUT","ProductList","currentCategory","useQuery","loading","data","products","useEffect","forEach","then","length","filter","category","map","key","spinner","CategoryMenu","categories","categoryData","id","CartItem","placeholder","value","onChange","target","role","aria-label","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripe","require","Stripe","Cart","useLazyQuery","getCheckout","toggleCart","a","getCart","res","redirectToCheckout","sessionId","checkout","session","cartOpen","sum","toFixed","calculateTotal","Auth","loggedIn","onclick","productIds","i","push","variables","Home","Detail","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","props","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","Success","addOrder","saveOrder","setTimeout","alert","defaultState","reducer","action","newState","createStore","client","ApolloClient","operation","setContext","headers","authorization","uri","App","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.7c63a7e8.chunk.js","sourcesContent":["export function pluralize(name, count) {\n  if (count === 1) {\n    return name\n  }\n  return name + 's'\n}\n\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    //open connection to the database `shop-shop` with the version of 1\n    const request = window.indexedDB.open('shop-shop', 1);\n\n    //create variables to hold references to the database, transaction(tx), and object store\n    let db, tx, store;\n\n    //if version has changed(or this is the first time using the the database), run this method and create the three object stores \n    request.onupgradeneeded = function (e) {\n      const db = request.result;\n\n      //create object store for each type of data and set \"primary\" key index to be the '_id' of the data\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    //handle any errors with connection\n    request.onerror = function (e) {\n      console.log('There was an error');\n    }\n\n    // on database open success\n    request.onsuccess = function (e) {\n      //save a reference of the database to the 'db' variable\n      db = request.result;\n      //open a transaction do whatever we pass into 'storeName' (must match one of the object store names)\n      tx = db.transaction(storeName, 'readwrite');\n      //save a reference to that object store\n      store = tx.objectStore(storeName);\n\n      //if there are any errors, let us know\n      db.onerror = function (e) {\n        console.log('error', e);\n      }\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function () {\n            resolve(all.result)\n          };\n          break;\n\n        case 'delete':\n          store.delete(object._id);\n          break;\n\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      //when the transaction is complete, close the connection\n      tx.oncomplete = function () {\n        db.close();\n      }\n\n    }\n\n  })\n\n}","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\r\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\r\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const ADD_MULTIPLE_TO_CART = 'ADD_MULTIPLE_TO_CART';\r\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\r\nexport const UPDATE_CART_QUANTITY = 'UPDATE_CART_QUANTITY';\r\nexport const CLEAR_CART = 'CLEAR_CART';\r\nexport const TOGGLE_CART = 'TOGGLE_CART';","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY} from '../../utils/actions';\nimport { idbPromise } from \"../../utils/helpers\";\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction ProductItem(item) {\n  const state = useSelector((state) => {\n    return state\n  });\n\n  const dispatch = useDispatch();\n\n  const { cart } = state;\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  };\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import gql from 'graphql-tag';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n{\n  categories {\n    _id\n    name\n  }\n}\n`;\n\nexport const QUERY_USER = gql`\n{\n  user {\n    firstName\n    lastName\n    orders {\n      _id\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        image\n      }\n    }\n  }\n}\n`;\n\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport ProductItem from \"../ProductItem\";\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\nimport spinner from \"../../assets/spinner.gif\"\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction ProductList() {\n  const state = useSelector((state) => {\n    return state\n  });\n  const dispatch = useDispatch();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const products = data?.products || [];\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product)\n      });\n\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products\n        })\n      })\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(product => product.category._id === currentCategory);\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {products.length ? (\n        <div className=\"flex-row\">\n            {filterProducts().map(product => (\n                <ProductItem\n                  key= {product._id}\n                  _id={product._id}\n                  image={product.image}\n                  name={product.name}\n                  price={product.price}\n                  quantity={product.quantity}\n                />\n            ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      { loading ? \n      <img src={spinner} alt=\"loading\" />: null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import { useQuery } from '@apollo/react-hooks';\nimport { QUERY_CATEGORIES } from \"../../utils/queries\";\nimport {UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY} from \"../../utils/actions\";\nimport React, { useEffect } from 'react';\nimport { idbPromise } from '../../utils/helpers';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction CategoryMenu() {\n  const state = useSelector((state) => {\n    return state\n  });\n  const dispatch = useDispatch();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    // if categoryData exists or has changed from the response of useQuery, then run dispatch()\n    if (categoryData) {\n      // execute our dispatch function with our action object indicating the type of action and the data to set our state for categories to\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category)\n      })\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        })\n      })\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map(item => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from 'react';\r\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\r\nimport { idbPromise } from '../../utils/helpers';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst CartItem = ({ item }) => {\r\n\r\n    const state = useSelector((state) => {\r\n        return state\r\n    });\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const removeFromCart = item => {\r\n        dispatch({\r\n            type: REMOVE_FROM_CART,\r\n            _id: item._id\r\n        });\r\n        idbPromise('cart', 'delete', { ...item });\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        const value = e.target.value;\r\n        \r\n        if (value === '0') {\r\n            dispatch({\r\n                type: REMOVE_FROM_CART,\r\n                _id: item._id\r\n            });\r\n\r\n            idbPromise('cart', 'delete', { ...item })\r\n        } else {\r\n            dispatch({\r\n                type: UPDATE_CART_QUANTITY,\r\n                _id: item._id,\r\n                purchaseQuantity: parseInt(value)\r\n            });\r\n\r\n            idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value)})\r\n        }\r\n    };\r\n\r\n  return (\r\n    <div className=\"flex-row\">\r\n      <div>\r\n        <img\r\n          src={`/images/${item.image}`}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <div>{item.name}, ${item.price}</div>\r\n        <div>\r\n          <span>Qty:</span>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"1\"\r\n            value={item.purchaseQuantity}\r\n            onChange={onChange}\r\n          />\r\n          <span\r\n            role=\"img\"\r\n            aria-label=\"trash\"\r\n            onClick={() => removeFromCart(item)}\r\n          >\r\n            🗑️\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\r\nimport CartItem from '../CartItem';\r\nimport Auth from '../../utils/auth';\r\nimport './style.css';\r\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\r\nimport { idbPromise } from '../../utils/helpers';\r\nimport { QUERY_CHECKOUT } from '../../utils/queries';\r\n//import { loadStripe } from '@stripe/stripe-js';\r\nimport { useLazyQuery } from '@apollo/react-hooks';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nconst Stripe = require('stripe');\r\n\r\nconst stripe = Stripe('sk_test_4eC39HqLyjWDarjtT1zdp7dc');\r\n\r\nconst Cart = () => {\r\n    const state = useSelector((state) => {\r\n        return state\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [getCheckout, {data}] = useLazyQuery(QUERY_CHECKOUT);\r\n\r\n    useEffect(() => {\r\n        async function getCart() {\r\n            const cart = await idbPromise('cart', 'get');\r\n            dispatch({\r\n                type: ADD_MULTIPLE_TO_CART,\r\n                products: [...cart]\r\n            })\r\n        };\r\n        if(!state.cart.length) {\r\n            getCart();\r\n        }\r\n    }, [state.cart.length, dispatch]);\r\n\r\n    function toggleCart() {\r\n        dispatch({type: TOGGLE_CART});\r\n    }\r\n\r\n    function calculateTotal() {\r\n        let sum = 0;\r\n        state.cart.forEach(item => {\r\n            sum += item.price * item.purchaseQuantity;\r\n        })\r\n\r\n        return sum.toFixed(2);\r\n    }\r\n\r\n    function submitCheckout() {\r\n        const productIds = [];\r\n        state.cart.forEach((item) => {\r\n            for (let i=0; i<item.purchaseQuantity; i++) {\r\n                productIds.push(item._id);\r\n            }\r\n        })\r\n        getCheckout({\r\n            variables: {products: productIds}\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(data) {\r\n            stripe.then((res) => {\r\n                res.redirectToCheckout({ sessionId: data.checkout.session })\r\n            })\r\n        }\r\n    }, [data])\r\n\r\n    if(!state.cartOpen) {\r\n        return (\r\n            <div className=\"cart-closed\" onClick={toggleCart}>\r\n                <span role=\"img\"\r\n                aria-label=\"trash\">🛒</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    console.log(state);\r\n\r\n    return (\r\n        <div className=\"cart\">\r\n            <div className=\"close\" onClick={toggleCart}>[close]</div>\r\n            <h2>Shopping Cart</h2>\r\n            {state.cart.length ? (\r\n                <div>\r\n                    {state.cart.map(item => (\r\n                        <CartItem key={item._id} item={item} />))}\r\n                    <div className=\"flex-row space-between\">\r\n                        <strong>Total: ${calculateTotal()}</strong>\r\n                        {\r\n                            Auth.loggedIn() ?\r\n                                <button onclick={submitCheckout}>\r\n                                    Checkout\r\n                                </button>\r\n                                :\r\n                                <span>(Please log in to checkout)</span>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <h3>\r\n                    <span role=\"img\" aria-label=\"shocked\">\r\n                        😱\r\n                    </span>\r\n                    You haven't added anything to your cart yet!\r\n                </h3>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from '../components/Cart';\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\nimport spinner from '../assets/spinner.gif'\nimport { useDispatch, useSelector } from 'react-redux';\nimport Cart from '../components/Cart';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Detail() {\n  const state = useSelector((state) => {\n    return state\n  });\n  const dispatch = useDispatch();\n\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({})\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n\n  useEffect(() => {\n    if (products.length) {\n      setCurrentProduct(products.find(product => product._id === id));\n    } else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id)\n\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id\n    });\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">\n            ← Back to Products\n          </Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>\n            {currentProduct.description}\n          </p>\n\n          <p>\n            <strong>Price:</strong>\n            ${currentProduct.price}\n            {\" \"}\n            <button onClick={addToCart}>\n              Add to Cart\n            </button>\n\n            <button disabled={!cart.find(p => p._id === currentProduct._id)} onClick={removeFromCart}>\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {\n        loading ? <img src={spinner} alt=\"loading\" /> : null\n      }\n    <Cart />\n    </>\n  );\n};\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import gql from 'graphql-tag';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      } \n      }\n    }\n  }\n`;\n\n\nexport const ADD_USER = gql`\n  mutation addUser($firstName: String!, $lastName: String!, $email: String!, $password: String!) {\n    addUser(firstName: $firstName, lastName: $lastName, email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;","import React, { useState } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport { Link } from \"react-router-dom\";\nimport { LOGIN } from \"../utils/mutations\"\nimport Auth from \"../utils/auth\";\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' })\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({ variables: { email: formState.email, password: formState.password } })\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e)\n    }\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">\n        ← Go to Signup\n      </Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {\n          error ? <div>\n            <p className=\"error-text\" >The provided credentials are incorrect</p>\n          </div> : null\n        }\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from '@apollo/react-hooks';\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email, password: formState.password,\n        firstName: formState.firstName, lastName: formState.lastName\n      }\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">\n        ← Go to Login\n      </Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\n          -Shop-Shop\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_USER } from \"../utils/queries\";\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">\n          ← Back to Products\n          </Link>\n\n        {user ? (\n          <>\n            <h2>Order History for {user.firstName} {user.lastName}</h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>{new Date(parseInt(order.purchaseDate)).toLocaleDateString()}</h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img\n                          alt={name}\n                          src={`/images/${image}`}\n                        />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n\n      </div>\n\n    </>)\n\n};\n\nexport default OrderHistory;\n","import React, { useEffect } from 'react';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport { ADD_ORDER } from '../utils/mutations';\r\nimport { idbPromise } from '../utils/helpers';\r\n\r\n\r\n\r\nfunction Success() {\r\n\r\n    const [addOrder] = useMutation(ADD_ORDER);\r\n\r\n    useEffect(() => {\r\n    async function saveOrder() {\r\n\r\n        const cart = await idbPromise('cart', 'get');\r\n        const products = cart.map(item => item._id);\r\n\r\n        if (products.length) {\r\n            const { data } = await addOrder({ variables: { products } });\r\n            const productData = data.addOrder.products;\r\n          \r\n            productData.forEach((item) => {\r\n              idbPromise('cart', 'delete', item);\r\n            });\r\n          }\r\n\r\n    }\r\n\r\n    saveOrder();\r\n\r\n\r\n    }, [addOrder]);\r\n\r\n    setTimeout(function(){ alert(\"\"); }, 3000);\r\n    window.location.assign('/')\r\n\r\n\r\n    return (\r\n      <div>\r\n        <Jumbotron>\r\n          <h1>Success!</h1>\r\n          <h2>\r\n            Thank you for your purchase!\r\n          </h2>\r\n          <h2>\r\n            You will now be redirected to the homepage\r\n          </h2>\r\n        </Jumbotron>\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default Success;","import {\r\n    UPDATE_PRODUCTS,\r\n    UPDATE_CATEGORIES,\r\n    UPDATE_CURRENT_CATEGORY,\r\n    ADD_TO_CART,\r\n    ADD_MULTIPLE_TO_CART,\r\n    REMOVE_FROM_CART,\r\n    UPDATE_CART_QUANTITY,\r\n    CLEAR_CART,\r\n    TOGGLE_CART\r\n} from './actions';\r\n\r\nconst defaultState = {\r\n    products: [],\r\n    cart: [],\r\n    cartOpen: false,\r\n    categories: [],\r\n    currentCategory: '',\r\n}\r\n\r\nexport const reducer = (state=defaultState, action) => {\r\n    switch (action.type) {\r\n        // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\r\n        case UPDATE_PRODUCTS:\r\n            return {\r\n                ...state,\r\n                products: [...action.products],\r\n            };\r\n        case UPDATE_CATEGORIES:\r\n            return {\r\n                ...state,\r\n                categories: [...action.categories]\r\n            };\r\n        case UPDATE_CURRENT_CATEGORY:\r\n            return {\r\n                ...state,\r\n                currentCategory: action.currentCategory\r\n            };\r\n        case ADD_TO_CART:\r\n            return {\r\n                ...state,\r\n                cartOpen: true,\r\n                cart: [...state.cart, action.product]\r\n            };\r\n        case ADD_MULTIPLE_TO_CART:\r\n            return {\r\n                ...state,\r\n                cart: [...state.cart, ...action.products],\r\n            };\r\n        case REMOVE_FROM_CART:\r\n            let newState = state.cart.filter(product => {\r\n                return product._id !== action._id;\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                cartOpen: newState.length > 0,\r\n                cart: newState\r\n            };\r\n        case UPDATE_CART_QUANTITY:\r\n            return {\r\n                ...state,\r\n                cartOpen: true,\r\n                cart: state.cart.map(product => {\r\n                    if (action._id === product._id) {\r\n                        product.purchaseQuantity = action.purchaseQuantity;\r\n                    }\r\n                    return product;\r\n                })\r\n            };\r\n        case CLEAR_CART:\r\n            return {\r\n                ...state,\r\n                cartOpen: false,\r\n                cart: []\r\n            };\r\n        case TOGGLE_CART:\r\n            return {\r\n                ...state,\r\n                cartOpen: !state.cartOpen\r\n            };\r\n        // if it's none of these actions, do not update state at all and keep things the same!\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\nimport reducer from '../utils/reducers';\r\n\r\nconst store = createStore(reducer);\r\nexport default store;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\n\nimport Home from \"./pages/Home\";\nimport Detail from \"./pages/Detail\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Nav from \"./components/Nav\";\nimport OrderHistory from \"./pages/OrderHistory\";\nimport Success from './pages/Success'\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nconst client = new ApolloClient({\n  request: (operation) => {\n    const token = localStorage.getItem('id_token')\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : ''\n      }\n    })\n  },\n  uri: '/graphql',\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Provider store={store}>\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/orderHistory\" component={OrderHistory} />\n            <Route exact path=\"/products/:id\" component={Detail} />\n            <Route exact path=\"/success\" component={Success} />\n            <Route component={NoMatch} />\n          </Switch>\n          </Provider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/spinner.ab497855.gif\";"],"sourceRoot":""}